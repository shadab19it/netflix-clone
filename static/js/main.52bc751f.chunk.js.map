{"version":3,"sources":["components/Nav/netflix.png","Services/request.js","Services/axios.js","components/Header/Header.js","components/Row.js","components/Nav/Nav.js","App.js","index.js"],"names":["module","exports","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumetries","instance","Axios","create","baseURL","Header","str","n","useState","movie","setMovie","useEffect","a","get","data","results","Math","floor","random","length","fetchData","console","log","style","background","backdrop_path","className","title","name","original_name","overview","substr","Rows","fetchURL","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","axios","getMovieData","map","m","i","onClick","movieTrailer","then","url","urlPrams","URLSearchParams","URL","search","catch","err","key","id","src","poster_path","alt","videoId","opts","height","width","playerVars","autoplay","Nav","scroll","handleScroll","window","addEventListener","scrollY","removeEventListener","NetflixIcon","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52bc751f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/netflix.e5692be8.png\";","// import React from 'react'\r\nconst API_KEY = \"01ccea53df52520eb5d3e5964a9b2ad5\";\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=123`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumetries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import Axios from \"axios\";\r\n\r\nconst instance = Axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","import Axios from \"../../Services/axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport requests from \"../../Services/request\";\r\nimport \"./Header.scss\";\r\n\r\nconst truncate = (str, n) => {\r\n  return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n};\r\nconst Header = () => {\r\n  const [movie, setMovie] = useState(\"\");\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { data } = await Axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(data.results[Math.floor(Math.random() * data.results.length - 1)]);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  console.log(movie);\r\n  return (\r\n    <header style={{ background: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")` }} className='banner'>\r\n      <div className='banner_content'>\r\n        <h1 className='movie_name'>{movie?.title || movie?.name || movie?.original_name}</h1>\r\n        <div className='banner_btns'>\r\n          <button className='banner_btn'>Play</button>\r\n          <button className='banner_btn'>My List</button>\r\n        </div>\r\n        <h1 className='banner_desc'>{truncate(movie?.overview, 150)}</h1>\r\n      </div>\r\n      <div className='banner_fadeBottom'></div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../Services/axios\";\r\nimport \"./Row.scss\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\nexport const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nconst Rows = ({ title, fetchURL, isLargeRow }) => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getMovieData = async () => {\r\n      try {\r\n        const { data } = await axios.get(fetchURL);\r\n        setMovies(data.results);\r\n        return data;\r\n      } catch (err) {\r\n        console.log(\"errr\" + err);\r\n      }\r\n    };\r\n\r\n    getMovieData();\r\n  }, [fetchURL]);\r\n\r\n  const handleClick = (movie) => {\r\n    console.log(movie);\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.title || \"\")\r\n        .then((url) => {\r\n          console.log(url);\r\n          const urlPrams = new URLSearchParams(new URL(url).search);\r\n\r\n          setTrailerUrl(urlPrams.get(\"v\"));\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n  return (\r\n    <div className={`row `}>\r\n      <h2 className='row_title'>{title}</h2>\r\n      <div className='row_posters'>\r\n        {movies.map((m, i) => {\r\n          return (\r\n            <img\r\n              onClick={() => handleClick(m)}\r\n              key={m.id}\r\n              src={`${base_url}${isLargeRow ? m.poster_path : m.backdrop_path}`}\r\n              alt=''\r\n              className={`poster ${isLargeRow && \"poster_large\"}`}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rows;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Nav.scss\";\r\nimport NetflixIcon from \"./netflix.png\";\r\n\r\nconst Nav = () => {\r\n  const [scroll, handleScroll] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 120) {\r\n        handleScroll(true);\r\n      } else {\r\n        handleScroll(false);\r\n      }\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n  console.log(scroll);\r\n  return (\r\n    <div className={`nav_container ${scroll && \"nav_black\"}`}>\r\n      <img src={NetflixIcon} alt='' className='brand_logo' />\r\n      <img\r\n        src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRe1_6-PtcF48iM3PkReAZlBpbSaLDhKNyisg&usqp=CAU'\r\n        alt=''\r\n        className='user_pic'\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","/** @format */\n\nimport React, { useState } from \"react\";\n\nimport \"./App.scss\";\nimport requests, { getMovieData } from \"./Services/request\";\nimport instance from \"./Services/axios\";\nimport Header from \"./components/Header/Header\";\nimport Row from \"./components/Row\";\nimport Nav from \"./components/Nav/Nav\";\n\nconst App = () => {\n  const [state, setState] = useState([]);\n\n  return (\n    <div className='app'>\n      <Nav />\n      <Header />\n      <Row title='NETFILX ORIGINALS' fetchURL={requests.fetchNetflixOriginals} isLargeRow={true} />\n      <Row title='TRENDING NOW' fetchURL={requests.fetchTopRated} />\n      <Row title='TOP RATED' fetchURL={requests.fetchTopRated} />\n      <Row title='ACTION MOVIE' fetchURL={requests.fetchActionMovies} />\n      <Row title='COMEDY MOVIE' fetchURL={requests.fetchComedyMovies} />\n      <Row title='HORROR MOVIE' fetchURL={requests.fetchHorrorMovies} />\n      <Row title='ROMANCE MOVIE' fetchURL={requests.fetchRomanceMovies} />\n      <Row title='DOCUMENTRIES' fetchURL={requests.fetchDocumetries} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}